import asyncio
from config import BOT_USERNAME, SUDO_USERS
from NIXA.decorators import authorized_users_only, sudo_users_only, errors
from NIXA.filters import command, other_filters
from NIXA.main import user as USER
from pyrogram import filters
from NIXA.main import bot as Client
from pyrogram.errors import UserAlreadyParticipant


@Client.on_message(
    command(["userbotjoin", f"userbotjoin@{BOT_USERNAME}"]) & ~filters.private & ~filters.bot
)
@authorized_users_only
@errors
async def join_group(client, message):
    chid = message.chat.id
    try:
        invitelink = await client.export_chat_invite_link(chid)
    except BaseException:
        await message.reply_text(
            "¬ª **…™'·¥ç …¥·¥è·¥õ  ú·¥Ä·¥†·¥á ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥:**\n\n¬ª ‚ùå __·¥Ä·¥Ö·¥Ö ·¥ús·¥á Äs__",
        )
        return

    try:
        user = await USER.get_me()
    except BaseException:
        user.first_name = "music assistant"

    try:
        await USER.join_chat(invitelink)
    except UserAlreadyParticipant:
        pass
    except Exception as e:
        print(e)
        await message.reply_text(
            f"üõë “ì ü·¥è·¥è·¥Ö ·¥°·¥Ä…™·¥õ ·¥á Ä Ä·¥è Ä üõë \n\n**·¥ús·¥á Ä ô·¥è·¥õ ·¥Ñ·¥è·¥ú ü·¥Ö…¥'·¥õ ·¥ä·¥è…™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ö·¥ú·¥á ·¥õ·¥è  ú·¥á·¥Ä·¥† è ·¥ä·¥è…™…¥  Ä·¥á«´·¥ú·¥ás·¥õs “ì·¥è Ä ·¥ús·¥á Ä ô·¥è·¥õ**"
            "\n\n**·¥è Ä ·¥Ä·¥Ö·¥Ö ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥ç·¥Ä…¥·¥ú·¥Ä ü ü è ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥**",
        )
        return
    await message.reply_text(
        f"‚úÖ **·¥ús·¥á Ä ô·¥è·¥õ s·¥ú·¥Ñ·¥Ñ·¥ás“ì·¥ú ü ü è ·¥á…¥·¥õ·¥á Ä·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õ**",
    )


@Client.on_message(command(["userbotleave",
                            f"leave@{BOT_USERNAME}"]) & filters.group & ~filters.edited)
@authorized_users_only
async def leave_one(client, message):
    try:
        await USER.send_message(message.chat.id, "‚úÖ ·¥ús·¥á Ä ô·¥è·¥õ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è  ü·¥á“ì·¥õ ·¥Ñ ú·¥Ä·¥õ")
        await USER.leave_chat(message.chat.id)
    except BaseException:
        await message.reply_text(
            "‚ùå **·¥ús·¥á Ä ô·¥è·¥õ ·¥Ñ·¥è·¥ú ü·¥Ö…¥'·¥õ  ü·¥á·¥Ä·¥†·¥á  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò, ·¥ç·¥Ä è  ô·¥á “ì ü·¥è·¥è·¥Ö·¥°·¥Ä…™·¥õs.**\n\n**¬ª ·¥è Ä ·¥ç·¥Ä…¥·¥ú·¥Ä ü ü è ·¥ã…™·¥Ñ·¥ã ·¥ús·¥á Ä ô·¥è·¥õ “ì Ä·¥è·¥ç  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò**"
        )

        return


@Client.on_message(command(["leaveall", f"leaveall@{BOT_USERNAME}"]))
@sudo_users_only
async def leave_all(client, message):
    if message.from_user.id not in SUDO_USERS:
        return

    left = 0
    failed = 0
    lol = await message.reply("üîÑ **·¥ús·¥á Ä ô·¥è·¥õ**  ü·¥á·¥Ä·¥†…™…¥…¢ ·¥Ä ü ü ·¥Ñ ú·¥Ä·¥õs !")
    async for dialog in USER.iter_dialogs():
        try:
            await USER.leave_chat(dialog.chat.id)
            left += 1
            await lol.edit(
                f"·¥ús·¥á Ä ô·¥è·¥õ  ü·¥á·¥Ä·¥†…™…¥…¢ ·¥Ä ü ü …¢ Ä·¥è·¥ú·¥ò...\n\n ü·¥á“ì·¥õ: {left} ·¥Ñ ú·¥Ä·¥õs.\n“ì·¥Ä…™ ü·¥á·¥Ö: {failed} ·¥Ñ ú·¥Ä·¥õs."
            )
        except BaseException:
            failed += 1
            await lol.edit(
                f"·¥ús·¥á Ä ô·¥è·¥õ  ü·¥á·¥Ä·¥†…™…¥…¢...\n\n ü·¥á“ì·¥õ: {left} ·¥Ñ ú·¥Ä·¥õs.\n“ì·¥Ä…™ ü·¥á·¥Ö: {failed} ·¥Ñ ú·¥Ä·¥õs."
            )
        await asyncio.sleep(0.7)
    await client.send_message(
        message.chat.id, f"‚úÖ  ü·¥á“ì·¥õ “ì Ä·¥è·¥ç: {left} ·¥Ñ ú·¥Ä·¥õs.\n‚ùå “ì·¥Ä…™ ü·¥á·¥Ö …™…¥: {failed} ·¥Ñ ú·¥Ä·¥õs."
    )
